on:
  repository_dispatch:
    types: [wheel-builder]
  workflow_dispatch:
  push:
    branches:
      - master
      - '2.9.2-fixes'
    tags:
      - '*.*.*'


jobs:
  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        WINDOWS:
          - {ARCH: 'x86', WINDOWS: 'win32'}
          - {ARCH: 'x64', WINDOWS: 'win64'}
        PYTHON:
#          - {VERSION: "2.7", TOXENV: "py27", MSVC_VERSION: "2010"}
#          - {VERSION: "3.5", TOXENV: "py35", MSVC_VERSION: "2019"}
#          - {VERSION: "3.6", TOXENV: "py36", MSVC_VERSION: "2019"}
#          - {VERSION: "3.7", TOXENV: "py37", MSVC_VERSION: "2019"}
          - {VERSION: "3.8", TOXENV: "py38", MSVC_VERSION: "2019"}
    name: "Python ${{ matrix.PYTHON.VERSION }} on ${{ matrix.WINDOWS.WINDOWS }}"
    steps:
      - uses: actions/checkout@master
      - name: Setup python
        uses: MatteoH2O1999/setup-python@v1
        with:
          python-version: ${{ matrix.PYTHON.VERSION }}
          architecture: ${{ matrix.WINDOWS.ARCH }}
        env:
          PIP_TRUSTED_HOST: pypi.python.org
      - name: Install MSVC for Python 2.7
        run: |
            Invoke-WebRequest -Uri https://download.microsoft.com/download/7/9/6/796EF2E4-801B-4FC4-AB28-B59FBF6D907B/VCForPython27.msi -OutFile VCForPython27.msi
            Start-Process msiexec -Wait -ArgumentList @('/i', 'VCForPython27.msi', '/qn', 'ALLUSERS=1')
            Remove-Item VCForPython27.msi -Force
        shell: powershell
        if: matrix.PYTHON.VERSION == '2.7'
      - run: pip install --index-url 'https://:2020-04-22T23:19:51.290101Z@time-machines-pypi.sealsecurity.io/' requests
      - name: Download OpenSSL
        run: |
            python .github/workflows/download_openssl.py ${{ matrix.WINDOWS.ARCH }}

      - run: pip install --index-url 'https://:2020-04-22T23:19:51.290101Z@time-machines-pypi.sealsecurity.io/' cffi six ipaddress "enum34; python_version < '3'"
      - name: Create Wheels
        run: pip wheel . --wheel-dir=wheelhouse --no-binary cryptography
        env:
          INCLUDE: C:\OpenSSL\include
          LIB: C:\OpenSSL\lib
      - run: $env:PATH = "C:\OpenSSL\bin;" + $env:PATH && pip install -f wheelhouse --no-index cryptography
        env:
          INCLUDE: C:\OpenSSL\include
          LIB: C:\OpenSSL\lib
      - name: Print the OpenSSL we built and linked against
        run: |
            $env:PATH = "C:\OpenSSL\bin;" + $env:PATH && python -c "from cryptography.hazmat.backends.openssl.backend import backend;print('Loaded: ' + backend.openssl_version_text());print('Linked Against: ' + backend._ffi.string(backend._lib.OPENSSL_VERSION_TEXT).decode('ascii'))"
        env:
          INCLUDE: C:\OpenSSL\include
          LIB: C:\OpenSSL\lib
      - run: mkdir cryptography-wheelhouse
      - run: move wheelhouse\cryptography*.whl cryptography-wheelhouse\
      - uses: actions/upload-artifact@v1
        with:
          name: "cryptography-${{ github.event.client_payload.BUILD_VERSION }}-${{ matrix.WINDOWS.WINDOWS }}-${{ matrix.PYTHON.VERSION }}"
          path: cryptography-wheelhouse\